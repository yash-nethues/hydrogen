import {useNonce, getShopAnalytics, Analytics} from '@shopify/hydrogen';
import {defer} from '@shopify/remix-oxygen';
import {
  Links,
  Meta,
  Outlet,
  Scripts,
  useRouteError,
  useRouteLoaderData,
  ScrollRestoration,
  isRouteErrorResponse,
} from '@remix-run/react';
import favicon from '~/assets/favicon.svg';
import resetStyles from '~/styles/reset.css?url';
import appStyles from '~/styles/app.css?url';
import tailwind from "~/tailwind.css?url";
import {PageLayout} from '~/components/PageLayout';
import {WishlistProvider} from '~/components/WishlistProvider';
import {FOOTER_QUERY, HEADER_QUERY} from '~/lib/fragments';

/**
 * This is important to avoid re-fetching root queries on sub-navigations
 * @type {ShouldRevalidateFunction}
 */
export const shouldRevalidate = ({formMethod, currentUrl, nextUrl}) => {
  // revalidate when a mutation is performed e.g add to cart, login...
  if (formMethod && formMethod !== 'GET') {
    return true;
  }

  // revalidate when manually revalidating via useRevalidator
  if (currentUrl.toString() === nextUrl.toString()) {
    return true;
  }

  return false;
};

export function links() {
  return [
    {
      rel: 'preconnect',
      href: 'https://cdn.shopify.com'
    },
    {
      rel: 'preconnect',
      href: 'https://shop.app',
    },
    {rel: 'icon', type: 'image/svg+xml', href: favicon},

    {
      rel: 'preconnect',
      href: 'http://fonts.googleapis.com',
      referrerPolicy: 'origin'
    },

    {
      rel: 'stylesheet',
      href: 'https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap',
      crossOrigin: 'anonymous',
      referrerPolicy: 'origin'
    },
    {rel: 'stylesheet', href: resetStyles},
    {rel: 'stylesheet', href: appStyles},
    {rel: 'stylesheet', href: tailwind},
   
   ];
}

/**
 * @param {LoaderFunctionArgs} args
 */
export async function loader(args) {
  // Start fetching non-critical data without blocking time to first byte
  const deferredData = await loadDeferredData(args);

  // Await the critical data required to render initial state of the page
  const criticalData = await loadCriticalData(args);

  const topMenus = await loadTopMenuData(args); 
  const {storefront, env} = args.context;
  return defer(
    {
      ...deferredData,
      ...criticalData,
      topMenus,
      publicStoreDomain: env.PUBLIC_STORE_DOMAIN,
      shop: getShopAnalytics({
        storefront,
        publicStorefrontId: env.PUBLIC_STOREFRONT_ID,
      }),
      consent: {
        checkoutDomain: env.PUBLIC_CHECKOUT_DOMAIN,
        storefrontAccessToken: env.PUBLIC_STOREFRONT_API_TOKEN,
      },
    },
    {
      headers: {
        'Set-Cookie': await args.context.session.commit(),
      },
    },
  );
}

/**
 * Load data necessary for rendering content above the fold. This is the critical data
 * needed to render the page. If it's unavailable, the whole page should 400 or 500 error.
 * @param {LoaderFunctionArgs}
 */
async function loadCriticalData({context}) {
  const {storefront} = context;

  const [header] = await Promise.all([
    storefront.query(HEADER_QUERY, {
      cache: storefront.CacheLong(),
      variables: {
        headerMenuHandle: 'main-menu', // Adjust to your header menu handle
      },
    }),
    // Add other queries here, so that they are loaded in parallel
  ]);

  return {
    header,
  };
}

async function loadDeferredData({context}) {
  const {storefront, customerAccount, cart} = context;

  const footer_help_menus = await Promise.all([
    storefront.query(FOOTER_QUERY, {
        cache: storefront.CacheLong(),
        variables: {
          footerMenuHandle: 'footer', 
        },
      })
]);

    const footer_resources_menus = await Promise.all([storefront
    .query(FOOTER_QUERY, {
      cache: storefront.CacheLong(),
      variables: {
        footerMenuHandle: 'resources-footer-menu', 
      },
    })
  ]);

    const footer_shopping_menus = await Promise.all([storefront
    .query(FOOTER_QUERY, {
      cache: storefront.CacheLong(),
      variables: {
        footerMenuHandle: 'shopping-footer-menu', 
      },
    })
    ]);

  return {
    cart: cart.get(),
    isLoggedIn: customerAccount.isLoggedIn(),
    footer_help_menus,
    footer_resources_menus,
    footer_shopping_menus
  };
}


/**
 * Load data for rendering content below the fold. This data is deferred and will be
 * fetched after the initial page load. If it's unavailable, the page should still 200.
 * Make sure to not throw any errors here, as it will cause the page to 500.
 * @param {LoaderFunctionArgs}
 */
async function loadTopMenuData({ context }, type = "top_menus") {
  try {
    // Fetch Metaobjects (Top Menu Items)
    const metaobjectData = await context.storefront.query(GET_METAOBJECT_QUERY, {
      variables: { type }
    });

    //console.log("Metaobject Response:", metaobjectData);

    const menuItems = metaobjectData?.metaobjects?.edges || [];

    // Transform menu data
    let topMenus = menuItems.map(edge => {
      const item = edge.node.fields.reduce((acc, field) => {
        acc[field.key] = field.value;
        return acc;
      }, {});

      // Ensure menu item has required fields
      return {
        link: item.link || "#",
        icon: item.icon || "", // Will be updated later if needed
        menu: item.menu || "Unnamed Menu"
      };
    });

    //console.log("Processed Menus (Before Fetching Icons):", topMenus);

    // Extract MediaImage IDs for icons
    const mediaImageIds = topMenus
      .filter(item => item.icon?.startsWith("gid://shopify/MediaImage/"))
      .map(item => item.icon);

    //console.log("MediaImage IDs:", mediaImageIds);

    // Fetch image URLs for icons
    if (mediaImageIds.length > 0) {
      const mediaResponse = await context.storefront.query(GET_MEDIA_IMAGES_QUERY, {
        variables: { ids: mediaImageIds }
      });

      //console.log("Media Response:", mediaResponse);

      // Ensure response has nodes and map the image URLs
      const imageUrlMap = (mediaResponse?.nodes || []).reduce((acc, node) => {
        if (node?.id && node?.image?.url) {
          acc[node.id] = node.image.url;
        }
        return acc;
      }, {});

      //console.log("Image URL Map:", imageUrlMap);

      // Replace icon ID with actual image URL
      topMenus = topMenus.map(item => ({
        ...item,
        icon: item.icon.startsWith("gid://shopify/MediaImage/")
          ? imageUrlMap[item.icon] || "/image/placeholder.jpg"
          : item.icon
      }));
    }

    //console.log("Processed Menus (After Fetching Icons):", topMenus);

    return topMenus;
  } catch (error) {
    console.error("Error fetching top menu data:", error);
    return [];
  }
}

/**
 * @param {{children?: React.ReactNode}}
 */
function Layout({children}) {
  const nonce = useNonce();
  /** @type {RootLoader} */
  const data = useRouteLoaderData('root');

  return (
    <html lang="en">
      <head>
        <meta charSet="utf-8" />
        <meta name="viewport" content="width=device-width,initial-scale=1" />   
        <Meta />
        <Links />
        {/* <style>
        @import url('https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap');
        </style> */}
        <svg xmlns="http://www.w3.org/2000/svg" className='w-0 h-0 hidden'>
  <symbol id="icon-tech-notes" viewBox="0 0 75.62 94.21">
    <rect fill="currentColor" x="0" y="0" width="2.94" height="94.21" rx="1.47" ry="1.47"/>
    <rect fill="currentColor" x="25.31" y="17.18" width="2.94" height="35.03" rx="1.47" ry="1.47" transform="translate(61.47 7.91) rotate(90)"/>
    <rect fill="currentColor" x="61.31" y="10.6" width="2.94" height="24.24" rx="1.47" ry="1.47" transform="translate(85.51 -40.06) rotate(90)"/>
    <rect fill="currentColor" x="50.66" y="0" width="2.94" height="24.24" rx="1.47" ry="1.47"/>
    <rect fill="currentColor" x="62.38" y="-4.25" width="2.94" height="31.92" rx="1.47" ry="1.47" transform="translate(10.42 48.58) rotate(-45)"/>
    <rect fill="currentColor" x="35.27" y="21.31" width="2.94" height="54.95" rx="1.47" ry="1.47" transform="translate(85.53 12.05) rotate(90)"/>
    <rect fill="currentColor" x="26.01" y="-26.01" width="2.94" height="54.95" rx="1.47" ry="1.47" transform="translate(28.94 -26.01) rotate(90)"/>
    <rect fill="currentColor" x="35.27" y="50.87" width="2.94" height="54.95" rx="1.47" ry="1.47" transform="translate(115.08 41.6) rotate(90)"/>
    <rect fill="currentColor" x="36.35" y="54.94" width="2.94" height="75.61" rx="1.47" ry="1.47" transform="translate(130.56 54.93) rotate(90)"/>
    <rect fill="currentColor" x="23.3" y="48.3" width="2.94" height="31.01" rx="1.47" ry="1.47" transform="translate(88.57 39.03) rotate(90)"/>
    <rect fill="currentColor" x="72.68" y="21.04" width="2.94" height="73.17" rx="1.47" ry="1.47"/>
    <path fill="none" stroke="currentColor" stroke-miterlimit="10" stroke-width="2.6px" d="M16.51,6.46h35.62v14.48H16.51c-4,0-7.24-3.24-7.24-7.24h0c0-4,3.24-7.24,7.24-7.24Z"/>
  </symbol>

  <symbol id="icon-proprietary" viewBox="0 0 21.31 21.31">
  	<path fill="currentColor" d="M0,13.49l2.63-2.05c.64.59,1.35,1.21,2.24,1.34,1.14.17,1.29-.5,1.36-1.47V.1s.15-.1.15-.1h3.5s.09.08.09.08l.02,10.97-.11,1.31,2.49-6.42h3.06s5.88,15.28,5.88,15.28l-.04.07h-3.09s-1.2-3.11-1.2-3.11h-6.12s-1.23,3.13-1.23,3.13h-3.08s-.06-.13-.06-.13l2.63-6.85c-.17.15-.31.33-.48.47-1.68,1.41-4.5,1.28-6.4.41-.84-.38-1.57-.95-2.23-1.59v-.13ZM15.83,15.19l-1.89-4.94-1.94,4.94h3.83Z"/>
  </symbol>

  <symbol id="icon-lpp" viewBox="0 0 24 24">
  	<path fill="currentColor" d="M12.69,0v1.79c2.95.07,5.42,2.02,5.38,5.1h-2.34c.14-3.95-6.87-4.37-7.44-.75-.71,4.54,5.45,3.64,8.07,5.29h7.65v1.11h-6.34c2.35,4.02-.15,8.89-4.97,8.83v2.62s-1.38,0-1.38,0v-2.62c-3.73.03-6.01-2.55-5.93-6.21h2.48c-.23,3.37,2.23,4.64,5.3,4.26,2.15-.26,3.39-2.27,2.83-4.32-.44-1.63-1.86-2.02-3.3-2.5l-12.7-.06v-1.1h8.41s-1.31-.96-1.31-.96c-3.11-3.4-.34-8.92,4.21-8.69V0s1.38,0,1.38,0Z"/>
  </symbol>

  <symbol id="icon-coupon-elig" viewBox="0 0 71.568 71.568">
    <path fill="currentColor" d="M69.232,43.494h2.336v7.676h-2.336V43.494z M71.568,12.796h-2.336v7.675h2.336V12.796z M71.568,58.844h-2.336v2.336h-2.336
		v2.336h4.672V58.844z M71.568,28.144h-2.336v7.676h2.336V28.144z M69.232,5.12h2.336V0.448h-4.672v2.336h2.336V5.12z
		 M51.552,63.516h7.674V61.18h-7.674V63.516z M10.837,2.784h2.336V0.448H8.501V5.12h2.336V2.784z M59.221,0.448h-7.673v2.336h7.673
		V0.448z M10.837,12.796H8.501v7.675h2.336V12.796z M0,68.025c0-1.702,1.38-3.082,3.083-3.082c0.99,0,1.87,0.466,2.434,1.193
		c0.243-0.144,0.5-0.666,0.668-0.992c0.651-1.219,1.247-2.313,2.008-3.331c-1.431-2.094-3.16-4.546-4.753-6.811
		c-0.88-1.25-1.677-3.13-0.588-4.706c0.082,0,0.164,0,0.245,0c2.242,3.054,4.438,6.151,6.725,9.16
		c2.282-3.009,4.481-6.106,6.723-9.16c0.081,0,0.163,0,0.243,0c1.093,1.576,0.292,3.456-0.586,4.706
		c-1.596,2.265-3.322,4.719-4.749,6.811c0.76,1.02,1.355,2.11,2.006,3.331c0.173,0.326,0.43,0.844,0.67,0.992
		c0.563-0.728,1.444-1.193,2.434-1.193c1.703,0,3.083,1.378,3.083,3.082c0,1.484-1.053,2.724-2.45,3.016
		c-0.101,0.034-0.201,0.059-0.308,0.079c-0.262,0-0.525,0-0.785,0c-0.748-0.141-1.662-0.611-2.105-1.318
		c-0.332-0.526-0.539-1.225-0.785-1.861c-0.717-1.852-1.774-3.428-3.392-4.361c-1.621,0.934-2.679,2.51-3.393,4.361
		c-0.248,0.635-0.458,1.335-0.785,1.861c-0.445,0.71-1.36,1.182-2.108,1.318c-0.259,0-0.522,0-0.785,0
		c-0.105-0.021-0.205-0.05-0.303-0.079C1.053,70.749,0,69.51,0,68.025z M14.883,68.025c0,0.928,0.755,1.686,1.685,1.686
		s1.687-0.755,1.687-1.686c0-0.929-0.753-1.686-1.687-1.686S14.883,67.092,14.883,68.025z M1.394,68.025
		c0,0.928,0.755,1.686,1.689,1.686c0.929,0,1.685-0.755,1.685-1.686c0-0.929-0.755-1.686-1.685-1.686
		C2.153,66.34,1.394,67.092,1.394,68.025z M10.837,43.494H8.501v7.676h2.336V43.494z M10.837,28.144H8.501v7.676h2.336V28.144z
		 M20.849,63.516h7.676V61.18h-7.676V63.516z M28.525,0.448h-7.676v2.336h7.676V0.448z M38.978,44.865V32.473
		c-3.287-0.624-5.716-1.661-7.286-3.116s-2.354-3.471-2.354-6.049c0-2.302,0.845-4.377,2.534-6.228
		c1.69-1.85,4.057-2.787,7.105-2.819v-3.022h2.164v2.976c3.016,0.212,5.328,1.1,6.943,2.666c1.615,1.565,2.459,3.634,2.536,6.201
		h-3.978c-0.107-1.152-0.418-2.144-0.931-2.978c-0.954-1.53-2.479-2.331-4.567-2.409v11.07c3.514,0.988,5.896,1.911,7.156,2.775
		c2.046,1.425,3.068,3.534,3.068,6.324c0,4.033-1.312,6.892-3.936,8.591c-1.453,0.944-3.552,1.564-6.293,1.868v4.409H38.98v-4.409
		c-4.411-0.287-7.402-1.85-8.982-4.683c-0.865-1.531-1.293-3.6-1.293-6.207h4.021c0.122,2.078,0.45,3.59,0.985,4.546
		C34.661,43.688,36.415,44.648,38.978,44.865z M41.142,44.975c2.587-0.123,4.379-1.067,5.36-2.844
		c0.518-0.91,0.775-1.962,0.775-3.164c0-1.894-0.698-3.332-2.092-4.317c-0.801-0.577-2.151-1.121-4.044-1.638V44.975L41.142,44.975z
		 M38.978,28.333V17.649c-1.999,0.078-3.427,0.682-4.274,1.82c-0.849,1.135-1.273,2.323-1.273,3.566c0,1.502,0.5,2.677,1.504,3.524
		C35.934,27.408,37.284,28.001,38.978,28.333z M43.874,0.448h-7.673v2.336h7.673V0.448z M43.874,61.18h-7.673v2.336h7.673V61.18z"/>
  </symbol>

  <symbol id="icon-sale" viewBox="0 0 512 512">
		<path fill="currentColor" d="m456.828125 0h-118.472656c-26.007813 0-60.789063 14.40625-79.175781 32.796875l-243.070313 243.066406c-10.390625 10.386719-16.109375 24.238281-16.109375 39.007813 0 14.769531 5.722656 28.621094 16.109375 39.007812l142.007813 142.011719c10.386718 10.386719 24.238281 16.109375 39.007812 16.109375 14.765625 0 28.621094-5.722656 39.011719-16.109375l243.066406-243.070313c18.390625-18.386718 32.796875-53.167968 32.796875-79.175781v-118.480469c-.003906-30.417968-24.753906-55.164062-55.171875-55.164062zm25.171875 173.644531c0 18.089844-11.21875 45.175781-24.007812 57.964844l-243.070313 243.066406c-4.722656 4.722657-11.042969 7.324219-17.796875 7.324219s-13.070312-2.601562-17.792969-7.320312l-142.007812-142.015626c-4.722657-4.722656-7.324219-11.042968-7.324219-17.792968 0-6.753906 2.597656-13.074219 7.320312-17.792969l243.070313-243.070313c12.789063-12.789062 39.875-24.007812 57.964844-24.007812h118.472656c13.878906 0 25.167969 11.289062 25.171875 25.164062zm0 0"/>
		<path fill="currentColor" d="m139.308594 331.492188c-5.453125-5.449219-4.089844-13.402344 4.085937-21.585938 9.546875-9.542969 16.476563-7.839844 20-11.359375 4.089844-4.089844.679688-11.136719-1.933593-13.746094-7.5-7.5-23.972657 5.792969-30.675782 12.496094-13.066406 13.066406-21.8125 33.402344-4.886718 50.332031 26.925781 26.925782 58.171874-14.769531 75.214843 2.273438 6.816407 6.816406 3.976563 15.789062-2.839843 22.609375-11.589844 11.585937-23.40625 5.90625-28.0625 10.5625-3.523438 3.523437-1.703126 11.25 1.476562 14.433593 6.589844 6.589844 25.449219 2.726563 40.332031-12.160156 15.679688-15.675781 18.632813-35.449218 2.386719-51.695312-29.425781-29.421875-61.011719 11.933594-75.097656-2.160156zm0 0"/>
		<path fill="currentColor" d="m298.136719 282.644531-93.394531-49.535156c-4.429688-2.386719-10.226563.226563-14.542969 4.546875-4.203125 4.199219-6.816407 9.996094-4.429688 14.429688l49.535157 93.390624c.339843.566407.683593 1.132813.910156 1.363282 3.636718 3.632812 11.476562.792968 15.449218-3.183594 2.5-2.496094 3.640626-5.226562 2.046876-7.953125l-10.792969-19.425781 26.019531-26.019532 19.425781 10.796876c2.730469 1.585937 5.453125.453124 7.953125-2.046876 3.976563-3.976562 6.703125-11.933593 3.179688-15.453124-.335938-.339844-.792969-.570313-1.359375-.910157zm-63.738281 18.976563-24.996094-44.769532 44.765625 25zm0 0"/>
		<path fill="currentColor" d="m343.007812 226.410156-27.722656 27.722656-65.554687-65.558593c-3.183594-3.179688-8.292969-.792969-11.929688 2.839843-3.746093 3.75-6.023437 8.75-2.839843 11.933594l73.847656 73.851563c3.070312 3.066406 7.839844 1.476562 11.136718-1.820313l36.015626-36.015625c2.953124-2.953125 1.136718-7.726562-2.046876-10.90625-3.292968-3.296875-7.949218-5.003906-10.90625-2.046875zm0 0"/>
		<path fill="currentColor" d="m402.425781 166.992188-32.152343 32.152343-22.835938-22.835937 17.269531-17.269532c3.179688-3.179687 1.589844-7.726562-1.023437-10.339843-3.066406-3.066407-7.613282-4.199219-10.566406-1.246094l-17.269532 17.265625-22.722656-22.722656 32.152344-32.148438c2.953125-2.957031 1.589844-7.726562-1.929688-11.25-3.070312-3.066406-7.839844-4.886718-11.023437-1.707031l-40.445313 40.449219c-3.292968 3.292968-4.886718 8.066406-1.816406 11.132812l73.738281 73.734375c3.066407 3.070313 7.835938 1.480469 11.132813-1.816406l40.445312-40.445313c3.183594-3.179687 1.363282-7.953124-1.703125-11.019531-3.523437-3.523437-8.296875-4.886719-11.25-1.933593zm0 0"/>
		<path fill="currentColor" d="m417.46875 80.398438c-3.949219 0-7.820312 1.601562-10.609375 4.390624-2.789063 2.789063-4.390625 6.660157-4.390625 10.609376 0 3.953124 1.601562 7.8125 4.390625 10.601562 2.789063 2.800781 6.660156 4.398438 10.609375 4.398438s7.808594-1.597657 10.601562-4.398438c2.796876-2.789062 4.398438-6.660156 4.398438-10.601562 0-3.949219-1.601562-7.820313-4.398438-10.609376-2.792968-2.789062-6.652343-4.390624-10.601562-4.390624zm0 0"/>
  </symbol>

  <symbol id="icon-super-sale" viewBox="0 0 287 287">
  	<path fill="currentColor" d="M157.34,1v19c38.39,2.91,60.69,33.27,54,71h-60v-23.5c0-3.9-2.68-10-6.97-11-17.95-4.19-17.18,23.98-10.87,33.84s42.22,28.32,54.15,36.85c26.92,19.24,33.26,41.46,30.67,74.3-2.78,35.2-26.43,57.51-60.98,61.52v23h-28v-24c-23.28-2.18-46.43-15.17-54.75-37.75-5.75-15.63-5.53-31.8-5.25-48.25h60c.54,10.63-.74,21.93.01,32.49.23,3.19,1.09,10.94,2.57,13.43,4.08,6.88,15.58,4.75,18.5-2.35,3.29-7.99,1.58-32.27-1.89-40.26-5.7-13.11-42.37-30.59-55.2-41.8-20.67-18.08-29.08-45.6-23.52-72.55,6.05-29.36,31.81-42.19,59.54-44.96V1h28Z"/>
  </symbol>

  <symbol id="icon-anniversary-sale" viewBox="0 0 496 496">
		<path fill="currentColor" d="m396.945312 288h-297.890624l-32 64h28.945312v144h304v-144h28.945312zm-9.890624 16 16 32h-126.109376l-16-32zm-278.109376 0h126.109376l-16 32h-126.109376zm275.054688 176h-128v-56h-16v56h-128v-128h116.945312l11.054688-22.113281v70.113281h16v-70.113281l11.054688 22.113281h116.945312zm0 0"/>
		<path fill="currentColor" d="m128 416h48v16h-48zm0 0"/>
		<path fill="currentColor" d="m128 448h48v16h-48zm0 0"/>
		<path fill="currentColor" d="m192 448h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m211.054688 130.113281 36.945312-9.417969 36.945312 9.410157 2.894532-39.671875 19.625-33.523438-34.710938-15.023437-24.753906-30.605469-24.761719 30.605469-34.710937 15.023437 19.625 33.523438zm22.152343-75.113281 14.792969-18.28125 14.792969 18.289062 21.742187 9.417969-12.375 21.140625-1.777344 24.328125-22.382812-5.703125-22.382812 5.695313-1.777344-24.328125-12.375-21.144532zm0 0"/>
		<path fill="currentColor" d="m87.839844 146.441406 11.625-19.847656-20.59375-8.921875-14.871094-18.390625-14.871094 18.382812-20.59375 8.921876 11.625 19.847656 1.71875 23.671875 22.121094-5.625 22.128906 5.632812zm-15.679688-4.882812-.609375 8.328125-7.550781-1.917969-7.542969 1.917969-.617187-8.328125-4.375-7.480469 7.625-3.300781 4.910156-6.058594 4.902344 6.066406 7.625 3.304688zm0 0"/>
		<path fill="currentColor" d="m455.839844 146.441406 11.625-19.847656-20.59375-8.921875-14.871094-18.390625-14.871094 18.382812-20.59375 8.921876 11.625 19.847656 1.71875 23.671875 22.121094-5.625 22.128906 5.632812zm-15.679688-4.882812-.609375 8.328125-7.550781-1.917969-7.542969 1.917969-.609375-8.328125-4.375-7.480469 7.625-3.300781 4.902344-6.058594 4.902344 6.066406 7.625 3.304688zm0 0"/>
		<path fill="currentColor" d="m99.558594 190.65625c15.234375 10.160156 28.769531 22.558594 40.203125 36.863281l31.6875 39.59375-6.554688-52.417969c-3.421875-27.367187-18.039062-52.558593-40.101562-69.101562l-7.664063-5.746094-23.449218 46.886719zm23.058594-26c13.527343 12.800781 22.703124 29.839844 25.847656 48.273438-10.105469-11.867188-21.570313-22.441407-34.207032-31.554688zm0 0"/>
		<path fill="currentColor" d="m331.105469 214.695312-6.554688 52.417969 31.6875-39.601562c11.441407-14.304688 24.96875-26.703125 40.203125-36.863281l5.871094-3.921876-23.449219-46.886718-7.664062 5.761718c-22.054688 16.542969-36.679688 41.726563-40.09375 69.09375zm50.636719-33.320312c-12.636719 9.113281-24.109376 19.679688-34.207032 31.554688 3.152344-18.433594 12.320313-35.472657 25.847656-48.273438zm0 0"/><path fill="currentColor" d="m280 272h16v-33.519531c0-38.425781 13.542969-75.832031 38.152344-105.359375l-12.296875-10.242188c-26.992188 32.394532-41.855469 73.449219-41.855469 115.601563zm0 0"/>
		<path fill="currentColor" d="m336 96h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m360 64h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m200 272h16v-33.519531c0-42.160157-14.863281-83.207031-41.847656-115.601563l-12.296875 10.242188c24.601562 29.527344 38.144531 66.933594 38.144531 105.359375zm0 0"/>
		<path fill="currentColor" d="m144 96h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m120 64h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m240 136h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m240 168h16v104h-16zm0 0"/>
		<path fill="currentColor" d="m464 216h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m464 248h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m480 232h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m448 232h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m440 0h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m440 32h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m456 16h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m424 16h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m16 248h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m16 280h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m32 264h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m0 264h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m16 0h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m16 32h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m32 16h16v16h-16zm0 0"/>
		<path fill="currentColor" d="m0 16h16v16h-16zm0 0"/>
  </symbol>

  <symbol id="icon-closeout" viewBox="0 0 512 512">
		<path d="M456.8,0H338.4c-26,0-60.8,14.4-79.2,32.8L16.1,275.9C5.7,286.3,0,300.1,0,314.9s5.7,28.6,16.1,39l142,142
		c10.4,10.4,24.2,16.1,39,16.1s28.6-5.7,39-16.1l243.1-243.1c18.4-18.4,32.8-53.2,32.8-79.2V55.2C512,24.7,487.2,0,456.8,0z
		 M482,173.6c0,18.1-11.2,45.2-24,58L214.9,474.7c-4.7,4.7-11,7.3-17.8,7.3s-13.1-2.6-17.8-7.3l-142-142c-4.7-4.7-7.3-11-7.3-17.8
		s2.6-13.1,7.3-17.8L280.4,54c12.8-12.8,39.9-24,58-24h118.5c13.9,0,25.2,11.3,25.2,25.2v118.4H482z"/>
		<path d="M334.5,278.9c-0.4,6.2-1.9,12.8-4.7,19.9c-2.7,7.1-6.9,13.9-12.2,20.6c-5.4,6.6-12.1,12-20.2,15.8
			c-8,3.9-17.3,5.5-27.6,4.9c-7.8-0.5-15-1.8-21.3-4.2c-6.3-2.3-12-5.7-17-10c-5-4.5-9.5-10.1-13.5-17c-3.6-6.3-6.6-13.4-8.9-21.1
			c-2.3-7.7-4-15.9-4.9-24.5c-0.9-8.7-1.1-17.7-0.6-27.4c0.9-15.6,3.4-29.6,7.6-41.7s9.8-22.5,16.8-30.9s15-14.7,24-18.8
			s18.5-5.9,28.4-5.3c12,0.7,22.6,4.5,31.6,11.2c9.1,6.8,15.8,15,20.3,24.5c4.5,9.5,6.5,18.4,6,26.7c-0.3,4.5-1.8,8.4-4.4,11.7
			c-2.6,3.3-5.7,4.9-9.2,4.7c-3.9-0.2-6.6-1.6-8.5-4.1c-1.8-2.5-3.7-6.7-5.7-12.7c-3.4-9.9-7.6-17.3-12.7-22.4
			c-5.1-5.1-11.5-7.8-19.2-8.3c-12.4-0.7-22.6,4.9-30.6,16.8c-8.1,11.9-12.7,29.1-14,51.8c-0.8,15.1,0.1,27.8,2.7,38
			c2.7,10.2,6.9,18,12.5,23.3c5.7,5.3,12.5,8.1,20.5,8.6c8.7,0.5,16.2-1.9,22.5-7.2c6.3-5.3,11.3-13.3,14.9-24
			c1.6-5.1,3.4-9.2,5.4-12.2c2.1-3.1,5.2-4.5,9.4-4.3c3.6,0.2,6.6,2.1,9,5.4C333.7,269.9,334.8,274.1,334.5,278.9z"/>
  </symbol>

  <symbol id="icon-prop-65" viewBox="0 0 175.91 155.66">
	  <path fill="#ffb000" stroke="#000000" stroke-width="7px" stroke-miterlimit="10" d="M160.54,150.85H14.4c-7.7,0-12.51-8.33-8.66-15L78.81,9.29c3.85-6.67,13.47-6.67,17.32,0l73.07,126.56c3.85,6.67-.96,15-8.66,15Z"/>
	  <polygon fill="#000000" points="97.69 49.42 91.66 112.2 83.45 113 78.23 53.93 97.69 49.42"/>
	  <path fill="#000000" d="M86.27,119.13c13.36-1.82,14.35,20.18-.21,18.57-10.06-1.11-10.73-17.08.21-18.57Z"/>
  </symbol>

  <symbol id="icon-is_sample" viewBox="0 0 24.49 24.43">
  	<path fill="currentColor" d="M0,21.1l14.13-12.95-2.71-.92,3.82-2.6c.01-.61,0-1.22,0-1.83,0-.03.01-.06.01-.1,0-.9,0-1.8,0-2.7h.04s3.63,2.82,3.63,2.82l4.41-1.41-1.55,4.36,2.7,3.75h0c-.22,0-.45,0-.67,0-1.22-.04-2.44-.08-3.67-.11-.07,0-.23-.03-.28,0l-2.74,3.72-.81-2.73L3.34,24.43l-3.34-3.33h0ZM22.07,2.63l-3.29,1.05-2.74-2.11c0,1.15,0,2.31-.02,3.46l-2.85,1.95,3.29,1.08.96,3.31,2.04-2.78h.4c.82.03,1.64.06,2.45.08.2,0,.41,0,.61.01l-2.02-2.81,1.15-3.26ZM15.82,8.68l-.83-.27-.62.56,1.14,1.12.54-.59-.24-.83ZM13.8,9.51L1.15,21.12l2.16,2.18h.02s11.65-12.61,11.65-12.61l-1.18-1.19Z"/>
  </symbol>

  <symbol id="icon-overstock" viewBox="0 0 512 512">
		<path fill="currentColor" d="M456.8,0H338.4c-26,0-60.8,14.4-79.2,32.8L16.1,275.9C5.7,286.3,0,300.1,0,314.9s5.7,28.6,16.1,39l142,142
		c10.4,10.4,24.2,16.1,39,16.1c14.8,0,28.6-5.7,39-16.1l243.1-243.1c18.4-18.4,32.8-53.2,32.8-79.2V55.2C512,24.7,487.2,0,456.8,0z
		 M482,173.6c0,18.1-11.2,45.2-24,58L214.9,474.7c-4.7,4.7-11,7.3-17.8,7.3s-13.1-2.6-17.8-7.3l-142-142c-4.7-4.7-7.3-11-7.3-17.8
		c0-6.8,2.6-13.1,7.3-17.8L280.4,54c12.8-12.8,39.9-24,58-24h118.5c13.9,0,25.2,11.3,25.2,25.2V173.6z"/>
		<path fill="currentColor" d="M417.5,80.4c-3.9,0-7.8,1.6-10.6,4.4s-4.4,6.7-4.4,10.6c0,4,1.6,7.8,4.4,10.6c2.8,2.8,6.7,4.4,10.6,4.4s7.8-1.6,10.6-4.4
		c2.8-2.8,4.4-6.7,4.4-10.6c0-3.9-1.6-7.8-4.4-10.6C425.3,82,421.4,80.4,417.5,80.4z"/>
		<path fill="currentColor" d="M249.9,148.2c15.3-1.4,28.9,1.6,40.7,9c11.8,7.4,21.3,18.7,28.4,33.8c7.1,15.1,11.7,33.2,13.7,54.3
		c1.5,15.6,1.2,29.9-0.7,42.9c-1.9,13-5.5,24.5-10.8,34.5c-5.3,9.9-12.3,17.8-20.8,23.6c-8.6,5.8-18.7,9.2-30.3,10.3
		c-11.6,1.1-22.2-0.5-31.8-4.7c-9.6-4.2-17.9-10.7-24.9-19.4c-7-8.7-12.7-19.4-17-32.1c-4.4-12.7-7.2-26.7-8.7-41.8
		c-1.5-15.5-1.2-29.9,0.9-43.1c2.1-13.2,5.7-24.7,11.1-34.3c5.3-9.7,12.2-17.3,20.7-23C228.7,152.6,238.6,149.2,249.9,148.2z
		 M302.3,247.9c-1.4-14.8-4.3-27.4-8.9-37.9c-4.5-10.5-10.3-18.2-17.3-23.1c-7-4.9-14.7-7-23.1-6.2c-6,0.6-11.4,2.6-16.2,6.2
		c-4.8,3.6-8.8,8.4-11.9,14.6c-3.1,6.2-5.3,14-6.6,23.3c-1.3,9.3-1.4,19.7-0.3,31c1.1,11.5,3.1,21.7,6.1,30.8
		c3,9.1,6.7,16.5,11.2,22.2c4.4,5.7,9.3,9.9,14.6,12.4c5.3,2.6,10.9,3.6,16.9,3c7.7-0.7,14.5-4,20.4-9.8
		c5.9-5.8,10.3-14.4,13.1-25.6C303.1,277.4,303.8,263.8,302.3,247.9z"/>
  </symbol>

  <symbol id="icon-alert-item-stock" viewBox="0 0 145.16 145.16">
    <path fill="currentColor" d="M30.67,43.58c.19-2.26-.28-4.81,0-7,6.29-49.1,79.91-47.37,82.95,2.46,2.11,34.54-27.84,33.86-33.56,59.49-1.15,5.14.74,14.42-6.93,15.14-12.89,1.2-6.59-19.81-3.69-26.77,6.9-16.55,16.05-17.07,24.68-28.3C116.95,28.89,70.92-3.77,50.21,24.64c-5.16,7.09-3.85,12.16-6,18.99-2.29,7.24-10.27,5.89-13.54-.05Z"/>
    <path fill="currentColor" d="M71.42,120.79c15.08-1.29,17.76,21.55,3.64,23.72-18.64,2.87-18.85-22.42-3.64-23.72Z"/>
  </symbol>

  <symbol id="icon-bulk" viewBox="0 0 86 86">
  <path fill="currentColor" d="M42,0l44,17v52l-44,17h-3L0,69V17L39,0h3ZM75,18.01L40.5,5.94l-30.5,12.07c.1,1.21,1.37,1.69,2.3,2.19,2.89,1.56,26.57,11.66,28.18,11.7,9.2-3.44,18.68-6.43,27.77-10.15,2.19-.9,5.61-1.56,6.75-3.74ZM38,79v-41.5L5,23v41.5c10.39,5.87,21.87,10.1,33,14.5ZM81,23l-38,14.5v41.5l38-14.5V23Z"/>
  <path fill="currentColor" d="M52,42.5c8.24-6.72,29.25-12.6,18,5.48,4.68,1.05,4.27,4.75,3.03,8.56-2.4,7.35-14.21,10.61-21.03,12.46v-26.5ZM65.3,47.49c1.39-.93,2.17-2.15,2.17-3.53,0-1.45-1.13-1.7-1.98-1.76-1.21-.08-4.43.7-6.38,1.96l-.1,5.84c2.1-.38,4.82-1.53,6.29-2.51ZM59.01,61c9.2-1.43,12.06-11.36.13-5.86l-.13,5.86Z"/>
  </symbol>

  <symbol id="icon-min-qty" viewBox="0 0 325.19 324.51">
  	<path fill="currentColor" d="M144.92.61c138.59-11.34,230.12,138.51,150.95,254.02-71.74,104.66-232.91,88.77-282.86-27.64C-29.47,127.96,36.68,9.47,144.92.61ZM111.14,234.81v-124.5l32.23,124.26c6.07,17.59,30.99,19.25,38.22,1.73l32.5-124.98v120.5c0,.37,1.62,6.24,1.95,7.05,5.92,14.75,28.06,12.12,30.8-4.29l.27-147.8c-.5-5.83-1.91-10.71-7.33-13.67-7.27-3.98-33.67-4.18-41.07-.68-4.82,2.28-6.16,6.35-7.89,11.1-10.94,29.98-16.75,66.77-25.98,98-.47,1.57-.97,5.31-2.71,5.78-9.51-36.64-18.03-73.76-29.79-109.7-1.72-2.8-3.82-4.94-6.97-6.03-6.55-2.26-29.58-2.03-36.19.26-8.28,2.86-10.25,8.7-11,16.99-4.05,44.82,2.99,95.53,0,140.97,2.3,25.37,30.18,23.05,32.97,5.02Z"/>
  </symbol>

  <symbol id="icon-hazard" viewBox="0 0 512 512">
		<path fill="currentColor" d="M454.4,407.7L326,179.4V58.3c11.6-4.1,20-15.2,20-28.3c0-16.5-13.5-30-30-30H196c-16.5,0-30,13.5-30,30
		c0,13,8.4,24.2,20,28.3v121.1L57.6,407.7c-12.3,21.9-12.1,48,0.6,69.7C70.9,499,93.4,512,118.6,512h274.8
		c25.1,0,47.7-13,60.4-34.7C466.5,455.6,466.7,429.6,454.4,407.7z M436.6,467.2c-9.1,15.5-25.2,24.8-43.2,24.8H118.6
		c-18,0-34.1-9.3-43.2-24.8c-9.1-15.5-9.2-34.1-0.4-49.8l42.4-75.4l10-17.7l77.3-137.4c0.8-1.5,1.3-3.2,1.3-4.9V60h10
		c5.5,0,10-4.5,10-10s-4.5-10-10-10h-20c-5.5,0-10-4.5-10-10s4.5-10,10-10h120c5.5,0,10,4.5,10,10s-4.5,10-10,10h-20
		c-5.5,0-10,4.5-10,10s4.5,10,10,10h10v122c0,1.7,0.4,3.4,1.3,4.9l58.9,104.8l12.2,21.6L437,417.5
		C445.8,433.1,445.6,451.7,436.6,467.2z"/>
		<path fill="currentColor" d="M223.4,291.2v49.7h66.4v-49.7c0-7.1,1.4-12.4,4.2-16c2.8-3.5,6.5-5.3,11-5.3c4.6,0,8.4,1.8,11.2,5.3
		c2.9,3.5,4.3,8.9,4.3,16v136.6c0,7.2-1.5,12.5-4.4,16.1c-2.9,3.5-6.6,5.3-11.2,5.3c-4.6,0-8.3-1.8-11.1-5.4
		c-2.8-3.6-4.1-8.9-4.1-16v-58.3h-66.4v58.3c0,7.2-1.5,12.5-4.4,16.1c-2.9,3.5-6.6,5.3-11.2,5.3c-4.6,0-8.3-1.8-11.1-5.4
		c-2.8-3.6-4.1-8.9-4.1-16V291.2c0-7.1,1.4-12.4,4.1-16c2.7-3.5,6.4-5.3,11.1-5.3c4.6,0,8.4,1.8,11.2,5.3
		C221.9,278.7,223.4,284,223.4,291.2z"/>
  </symbol>

  <symbol id="icon-ltl" viewBox="0 0 150.89 150.89">
    <path fill="currentColor" d="M92.2,106.45h-45c-3.6-18.43-29.44-18.77-32.28-.03-6.25.34-12.74.47-12.75-7.06-.03-18.29-.24-39.06,0-57.82-.15-3.67,2.78-6.85,6.39-7.11,25.91-.71,56.04-.16,76.55-.02,5.17.04,7.02,3.23,7.09,6.91v65.12Z"/>
    <path fill="currentColor" d="M119.57,46.45c2.57.43,4.98,2.74,6.76,4.49,7.71,7.61,14.75,18.49,22.04,26.71,1.78,8.82.48,18.51.72,27.57-.75,2.29-7.5.89-9.61,1.2-2.86-18.74-28.68-18.38-32.38-.07l-9.65.1v-60c6.75-.34,15.75-.53,22.12,0ZM105.32,53.2l-1.12,1.12v15l1.12,1.12h24.75c.96-.88,1.35-.9.76-2.25-.62-1.44-11.78-15-12.76-15h-12.75Z"/>
    <path fill="currentColor" d="M121.25,97.62c12.53-2.15,19.31,15.26,7.74,21.25-16.45,8.53-23.71-18.51-7.74-21.25Z"/>
    <path fill="currentColor" d="M29,97.62c15.94-2.55,18.06,22.68,1.94,22.8-14.14.11-15.32-20.66-1.94-22.8Z"/>
  </symbol>

  <symbol id="icon-dropship" viewBox="0 0 51.85 51.83">
	  <path fill="currentColor" d="M51.85,11.13v29.63c-.13.6-.5,1.02-1.07,1.24l-26.34,9.84h-.19l-.58-.17L.73,41.8c-.11-.13-.29-.25-.39-.39-.16-.22-.2-.48-.34-.7V11.03c.22-.53.52-.95,1.04-1.22C8.69,6.56,16.32,3.23,23.99,0h.58c8.89,3.28,17.81,6.55,26.63,10,.24.21.43.45.59.72l.07.39ZM45.58,11.27L24.37,3.36,5.83,11.27l.21.15,18.33,7.84,20.88-7.81.33-.18ZM48.64,13.65l-22.69,8.52v25.62l22.69-8.45V13.65ZM22.69,47.7v-25.57L3.3,13.8v25.57l19.39,8.33Z"/>
	  <path fill="currentColor" d="M31.64,41.63v-16.68c0-.15.34-.31.45-.37,1.67-.82,3.82-1.61,5.57-2.3,2.46-.96,5.95-1.94,6.79,1.57,0,2.52.22,5.25.06,7.76-.07,1.05-.49,2.17-1.01,3.07-2.45,4.18-7.5,5.07-11.57,6.99l-.29-.03ZM35.67,36.63c.05,0,.1,0,.15-.02.79-.25,2.81-1.09,3.4-1.6,2.12-1.85.97-5.72,1.26-8.21-.12-1.03-.62-1.62-1.71-1.47-.27.04-.6.21-.86.3-.75.29-1.51.62-2.24.97v10.03Z"/>
  </symbol>
  
  <symbol id="icon-wishlistEmpty" viewBox="0 0 472.7 415.7">
  	<path fill="currentColor" stroke="currentColor" stroke-miterlimit="10" d="M433.6,67a130.61,130.61,0,0,0-184.7.1L236,80,222.9,66.9a130.49,130.49,0,0,0-184.7-.2,130.49,130.49,0,0,0,.2,184.7L226.2,439.2a13.4,13.4,0,0,0,19,.1L433.4,251.8A130.85,130.85,0,0,0,433.6,67ZM414.4,232.7l-178.7,178L57.4,232.4A103.52,103.52,0,1,1,203.8,86l22.6,22.6a13.46,13.46,0,0,0,19.1,0l22.4-22.4A103.59,103.59,0,0,1,414.4,232.7Z" transform="translate(0.5 -28)"/>
  </symbol>
  <symbol id="icon-wishlistFill" viewBox="0 0 471.7 414.7">
  	<path fill="currentColor" d="M433.6,67a130.61,130.61,0,0,0-184.7.1L236,80,222.9,66.9a130.49,130.49,0,0,0-184.7-.2,130.49,130.49,0,0,0,.2,184.7L226.2,439.2a13.4,13.4,0,0,0,19,.1L433.4,251.8A130.85,130.85,0,0,0,433.6,67Z" transform="translate(0 -28.5)"/>
  </symbol>  
  <symbol id="icon-wishlistRemoved" viewBox="0 0 408.87 363.8">
  	<path fill="currentColor" d="M408.87,113.59v18.36c-6.62,95.14-124.48,163.72-186.46,224.34-12.15,10.53-23.69,9.47-35.88,0-24.41-18.94-50.45-42.83-73.89-63.44C51.86,239.38-18.53,179.13,4.46,88.03,14.84,46.89,46.84,12.37,88.85,3.15c46.51-10.21,87.94,7.95,115.24,45.76,1.03.27,9.94-11.47,11.55-13.19,70.78-75.83,188.6-21.78,192.5,76.6l.74,1.27ZM106.9,24.4c-38.07,2.96-67.84,30.22-78.3,66.22-20.53,70.65,29.66,120.55,76.85,163.9,29.97,27.54,63.47,56.52,95.02,82.24.88.71,3.38,2.85,4.28,2.69,25.49-22.17,51.84-43.43,77.18-65.77,52.9-46.64,121.56-103.39,98.41-183.07C360.17,21.2,277.5.22,229.25,56.52c-8.34,9.73-14.83,29.58-30.93,22.9-6.13-2.55-14.22-17.83-19.37-23.74-18.78-21.53-42.91-33.54-72.04-31.28Z"/>
	</symbol>
  <symbol id="icon-wishlistAdded" viewBox="0 0 387.13 351.15">
	  <path fill="currentColor" d="M0,122.11v-16.64C5.92,25.57,92.46-25.05,164.92,12.79c10.91,5.7,19.49,13.18,28.99,20.76,7.07-6.12,13.7-11.99,21.73-16.9,52.02-31.79,119.74-15.99,153.05,34.42,28.63,43.33,21.11,95.54-3.35,138.78,2.89,7.32,7.06,13.82,9.65,21.33,14.29,41.52,1.58,87.74-32.73,115.14-34.78,27.77-82.42,30.2-120.24,6.85l-28.11,17.98c-27.76-17.18-54.89-36.39-80.04-57.36C63.68,251.96,6.35,191.68.7,123.31l-.7-1.2ZM192.9,72.18c-17.32-28.93-45.37-47.87-79.82-47.98-39.32-.13-75.14,26.53-85.64,64.46-22.87,82.62,75.81,169.41,134.94,212.58,3.69,2.7,29.62,21.35,31.51,21.17l8.81-5.52c-53.16-54.9-28-149.01,45.39-170.19,36.15-10.44,72.91-.94,100.59,23.82,11.36-24.15,18.23-50.28,12.35-77.01-12.03-54.74-72.08-84.33-123.29-61.54-18.64,8.29-32.27,22.99-43.3,39.74l-1.56.48ZM268.38,166.97c-61.59,5.74-92.06,81.93-52.02,129.48,39.96,47.46,117.81,33.35,136.67-25.91,17.81-55.98-26.75-108.96-84.65-103.56Z"/>
	  <polygon fill="currentColor" points="289.71 234.06 326.77 234.06 326.77 257.51 289.71 257.51 289.71 294.2 288.57 295.33 265.5 295.33 265.5 257.51 228.44 257.51 228.44 234.06 265.5 234.06 265.5 197.37 266.64 196.24 288.57 196.24 289.71 197.37 289.71 234.06"/>
  </symbol>  
  <symbol id="icon-envelope" viewBox="0 0 383.29 234.43">
    <path fill="currentColor" d="M383.29,18.48v199.11c-3.19,9.24-9.01,14.88-19.06,15.75-103.56.61-207.15-.89-310.71-.06-19.25.15-52.17,8.21-53.52-20.52L.03,18.85C1.69,8.64,8.76,2.12,19.09,1.23c105.53.13,211.2.27,316.63-.75,14.07-.14,37.85-3.73,45.18,11.02l2.38,6.97ZM340.62,20.72H41.95l149.47,103.93L340.62,20.72ZM39.71,213.85h303.91l-87.18-68.14c-11.05-7.72-1.9-23.87,10.35-17.08l97.04,74.74-.75-173.66-168.39,116.42-7.06-.47L19.5,30.46l.75,172.91,96.91-74.87c10.08-5.81,20.02,6.62,12.31,15.3l-89.76,70.05Z"/>
  </symbol>
  <symbol id="icon-needHelp" viewBox="0 0 408.83 408.84">
	  <path fill="currentColor" d="M408.83,56.73v342.53c-2,4.76-4.84,7.59-9.58,9.58h-6.39l-4.81-2.77-74-73.71-255.32-.18c-31.14-2.92-55.76-27.54-58.69-58.69l-.04-214C2.69,27.47,28.06,2.08,60.28,0l290.57.14c26.42,2.81,48.97,21.43,55.82,47.18l2.17,9.41ZM383.28,364.93V60.32c0-16.98-19.47-34.76-36.34-34.72l-284.26-.04c-20.28,1.27-35.43,16.1-37.08,36.37l-.05,206.82c.8,20.24,15.47,35.94,35.67,37.79l261.43.46,4.77,2.42,55.87,55.51Z"/>
	  <path fill="currentColor" d="M111.62,140.77c34.27-4.49,39.47,48.22,5.38,50.88-32.46,2.53-37.68-46.65-5.38-50.88Z"/>
	  <path fill="currentColor" d="M201.04,140.77c34.27-4.49,39.47,48.22,5.38,50.88-32.46,2.53-37.68-46.65-5.38-50.88Z"/>
	  <path fill="currentColor" d="M290.47,140.77c34.27-4.49,39.47,48.22,5.38,50.88-32.46,2.53-37.68-46.65-5.38-50.88Z"/>
  </symbol>  
  <symbol id="icon-longArrow" viewBox="0 0 14.45 8.66">
  	<line fill="none" stroke="currentColor" stroke-miterlimit="10" y1="4.34" x2="13" y2="4.34"/>
  	<polyline fill="none" stroke="currentColor" points="9.77 8.3 13.74 4.33 9.77 0.35"/>
  </symbol>
  <symbol id="icon-check" viewBox="0 0 17.21 15.1">
  	<path fill="currentColor" d="M501.61,1241.48a17.14,17.14,0,0,1-1.45,1.69c-1.3,1.48-2.65,2.94-3.85,4.48a20.61,20.61,0,0,0-2.63,4.2,9.8,9.8,0,0,0-.85,2.64c-.12.85-1.39,1-2,.59l-.27-.21c-1.61-1.36-2.08-1.82-3.77-3.11-.58-.44-1.18-.87-1.79-1.29a1.44,1.44,0,0,1-.33-.27c-.35-.42-.18-1,.39-1.28a1.5,1.5,0,0,1,1.64.08c1,.65,1.92,1.35,2.82,2.08s.49.38,1.27,1.05a1.28,1.28,0,0,1,.12.15c.18-.44.32-.83.5-1.22a22.57,22.57,0,0,1,2.76-4.39c1.24-1.6,2.63-3.11,4-4.64.43-.48.84-1,1.29-1.45a1.32,1.32,0,0,1,1.26-.33,1.46,1.46,0,0,1,1,.75A.75.75,0,0,1,501.61,1241.48Z" transform="translate(-484.48 -1240.21)"/>
  </symbol>
  <symbol id="icon-roundArrow" viewBox="0 0 408.61 408.8">
  	<path fill="currentColor" d="M408.61,192.36v23.94l-4.54,30.98c-16.53,77.76-79.1,140.32-156.89,156.84l-30.99,4.54c-7.92-.33-16.05.45-23.95,0C12.73,398.37-67.04,174.11,67.25,52.66c127.08-114.93,331.64-29.73,341.35,139.7ZM167.27,102.36c-11.48,1.94-18.09,15.65-11.63,25.61l74.86,76.07-71.02,71.7c-17.74,17.69,5.78,42.05,23.98,24.77,24.83-28.54,59.18-54.27,83.05-83,7.55-9.09,7.95-16.69.39-25.97-28.57-25.08-54.27-58.8-83.03-83.02-5.09-4.29-9.52-7.37-16.6-6.17Z"/>
  </symbol>
</svg>
      </head>
      <body>
        {data ? (
          <Analytics.Provider
            cart={data.cart}
            shop={data.shop}
            consent={data.consent}
          >
            <PageLayout {...data}>{children}</PageLayout>
          </Analytics.Provider>
        ) : (
          children
        )}
        <ScrollRestoration nonce={nonce} />
        <Scripts nonce={nonce} />
      </body>
    </html>
  );
}

export default function App() {
  return (
    <WishlistProvider>
      <Layout>
        <Outlet />
      </Layout>
    </WishlistProvider>
  );
}


export function ErrorBoundary() {
  const error = useRouteError();
  let errorMessage = 'Unknown error';
  let errorStatus = 500;

  if (isRouteErrorResponse(error)) {
    errorMessage = error?.data?.message ?? error.data;
    errorStatus = error.status;
  } else if (error instanceof Error) {
    errorMessage = error.message;
  }

  return (
    <Layout>
      <div className="route-error">
        <h1>Oops</h1>
        <h2>{errorStatus}</h2>
        {errorMessage && (
          <fieldset>
            <pre>{errorMessage}</pre>
          </fieldset>
        )}
      </div>
    </Layout>
  );
}



const GET_MEDIA_IMAGES_QUERY = `#graphql
  query GetMediaImages($ids: [ID!]!) {
    nodes(ids: $ids) {
      ... on MediaImage {
        id
        image {
          url
        }
      }
    }
  }
`;

const GET_METAOBJECT_QUERY = `#graphql
  query GetMetaobject($type: String!) {
    metaobjects(type: $type, first: 10) {
      edges {
        node {
          handle
          type
          fields {
            key
            value
          }
        }
      }
    }
  }
`;


/** @typedef {LoaderReturnData} RootLoader */

/** @typedef {import('@shopify/remix-oxygen').LoaderFunctionArgs} LoaderFunctionArgs */
/** @typedef {import('@remix-run/react').ShouldRevalidateFunction} ShouldRevalidateFunction */
/** @typedef {import('@shopify/remix-oxygen').SerializeFrom<typeof loader>} LoaderReturnData */